{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_services/marker.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/map/map.component.ts","webpack:///src/app/map/map.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","MarkerService","http","capitals","map","get","subscribe","res","features","c","lat","geometry","coordinates","lon","marker","addTo","providedIn","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","iconRetinaUrl","iconUrl","shadowUrl","iconDefault","iconSize","iconAnchor","popupAnchor","tooltipAnchor","shadowSize","prototype","options","icon","MapComponent","markerService","initMap","makeCapitalMarkers","center","zoom","tiles","maxZoom","attribution","environment","production","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,a;AAIX,6BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAFpB,aAAAC,QAAA,GAAmB,yCAAnB;AAGC;;;;2CAEkBC,G,EAAU;AAC3B,eAAKF,IAAL,CAAUG,GAAV,CAAc,KAAKF,QAAnB,EAA6BG,SAA7B,CAAuC,UAACC,GAAD,EAAc;AAAA,uDACnCA,GAAG,CAACC,QAD+B;AAAA;;AAAA;AACnD,kEAA8B;AAAA,oBAAnBC,CAAmB;AAC5B,oBAAMC,GAAG,GAAGD,CAAC,CAACE,QAAF,CAAWC,WAAX,CAAuB,CAAvB,CAAZ;AACA,oBAAMC,GAAG,GAAGJ,CAAC,CAACE,QAAF,CAAWC,WAAX,CAAuB,CAAvB,CAAZ;AACA,oBAAME,MAAM,GAAG,+CAAS,CAACD,GAAD,EAAMH,GAAN,CAAT,EAAqBK,KAArB,CAA2BX,GAA3B,CAAf;AACD;AALkD;AAAA;AAAA;AAAA;AAAA;AAMpD,WAND;AAOD;;;;;;;uBAfUH,a,EAAa,uH;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBAFZ;;;;;sEAEDA,a,EAAa;cAHzB,wDAGyB;eAHd;AACVe,oBAAU,EAAE;AADF,S;AAGc,Q;;;;;;;;;;;;;;;;;;;;;;ACP1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMC,MAAM,GAAW,EAAvB;;QAMaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBF,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBC,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBF,MAArB,CAAD,CADD;AAERlB,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOasB,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,iBAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;;;;;;;;sEDOaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAwBaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBALT,CACT,sEADS,C;AAEV,gBAPQ,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,CAOR;;;;0HAGUA,S,EAAS;AAAA,uBAblB,2DAakB,EAZlB,+DAYkB;AAZN,kBAGZ,uEAHY,EAIZ,oEAJY,EAKZ,qEALY;AAYM,O;AAPF,K;;;;;sEAOPA,S,EAAS;cAfrB,sDAeqB;eAfZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,+DAFY,CADN;AAKRP,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,CALD;AAURQ,mBAAS,EAAE,CACT,sEADS,CAVH;AAaRC,mBAAS,EAAE,CAAC,2DAAD;AAbH,S;AAeY,Q;;;;;;;;;;;;;;;;;;ACxBtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMC,aAAa,GAAG,2BAAtB;AACA,QAAMC,OAAO,GAAG,wBAAhB;AACA,QAAMC,SAAS,GAAG,0BAAlB;AACA,QAAMC,WAAW,GAAG,6CAAO;AACzBH,mBAAa,EAAbA,aADyB;AAEzBC,aAAO,EAAPA,OAFyB;AAGzBC,eAAS,EAATA,SAHyB;AAIzBE,cAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CAJe;AAKzBC,gBAAU,EAAE,CAAC,EAAD,EAAK,EAAL,CALa;AAMzBC,iBAAW,EAAE,CAAC,CAAD,EAAI,CAAC,EAAL,CANY;AAOzBC,mBAAa,EAAE,CAAC,EAAD,EAAK,CAAC,EAAN,CAPU;AAQzBC,gBAAU,EAAE,CAAC,EAAD,EAAK,EAAL;AARa,KAAP,CAApB;AAUA,mDAASC,SAAT,CAAmBC,OAAnB,CAA2BC,IAA3B,GAAkCR,WAAlC;;QAOaS,Y;AAGX,4BAAoBC,aAApB,EAAkD;AAAA;;AAA9B,aAAAA,aAAA,GAAAA,aAAA;AAAiC;;;;0CAEtC;AACb,eAAKC,OAAL;AACA,eAAKD,aAAL,CAAmBE,kBAAnB,CAAsC,KAAKzC,GAA3C;AACD;;;kCAEc;AACb,eAAKA,GAAL,GAAW,4CAAM,KAAN,EAAa;AACtB0C,kBAAM,EAAE,CAAE,OAAF,EAAW,CAAC,OAAZ,CADc;AAEtBC,gBAAI,EAAE;AAFgB,WAAb,CAAX;AAKA,cAAMC,KAAK,GAAG,kDAAY,oDAAZ,EAAkE;AAC9EC,mBAAO,EAAE,EADqE;AAE9EC,uBAAW,EAAE;AAFiE,WAAlE,CAAd;AAKFF,eAAK,CAACjC,KAAN,CAAY,KAAKX,GAAjB;AACC;;;;;;;uBAtBUsC,Y,EAAY,uI;AAAA,K;;;YAAZA,Y;AAAY,8B;AAAA,c;AAAA,a;AAAA,qE;AAAA;AAAA;ACzBzB;;AACI;;AACE;;AACF;;AACF;;;;;;;;sEDqBWA,Y,EAAY;cALxB,uDAKwB;eALd;AACTnB,kBAAQ,EAAE,SADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;AEzBzB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM0B,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as L from 'leaflet';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MarkerService {\n\n  capitals: string = '/assets/data/usa-state-capitals.geojson';\n\n  constructor(private http: HttpClient) {\n  }\n\n  makeCapitalMarkers(map: L.map): void {\n    this.http.get(this.capitals).subscribe((res: any) => {\n      for (const c of res.features) {\n        const lat = c.geometry.coordinates[0];\n        const lon = c.geometry.coordinates[1];\n        const marker = L.marker([lon, lat]).addTo(map);\n      }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'leaflet-example';\n}\n","<app-map></app-map>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MapComponent } from './map/map.component';\nimport { MarkerService } from './_services/marker.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MapComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [\n    MarkerService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { AfterViewInit, Component } from '@angular/core';\nimport * as L from 'leaflet';\nimport { icon, Marker } from 'leaflet';\nimport { MarkerService } from '../_services/marker.service';\n\nconst iconRetinaUrl = 'assets/marker-icon-2x.png';\nconst iconUrl = 'assets/marker-icon.png';\nconst shadowUrl = 'assets/marker-shadow.png';\nconst iconDefault = L.icon({\n  iconRetinaUrl,\n  iconUrl,\n  shadowUrl,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  tooltipAnchor: [16, -28],\n  shadowSize: [41, 41]\n});\nL.Marker.prototype.options.icon = iconDefault;\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements AfterViewInit {\n  private map;\n\n  constructor(private markerService: MarkerService) { }\n\n  ngAfterViewInit(): void {\n    this.initMap();\n    this.markerService.makeCapitalMarkers(this.map);\n  }\n\n  private initMap(): void {\n    this.map = L.map('map', {\n      center: [ 18.8942, -96.9347 ],\n      zoom: 14\n    });\n\n    const tiles = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      maxZoom: 19,\n      attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n    });\n\n  tiles.addTo(this.map);\n  }\n\n}\n","<div class=\"map-container\">\n    <div class=\"map-frame\">\n      <div id=\"map\"></div>\n    </div>\n  </div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}